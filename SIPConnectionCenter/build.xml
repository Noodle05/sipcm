<?xml version="1.0" encoding="utf-8" ?>
<project xmlns:ivy="antlib:org.apache.ivy.ant" name="SIPConnectionManager" default="dist">

	<property file="build.properties" />

	<property name="ivy.install.version" value="2.2.0-rc1" />
	<property name="ivy.jar.dir" value="${basedir}/ivy" />
	<property name="ivy.jar.file" value="${ivy.jar.dir}/ivy-${ivy.install.version}.jar" />
	<property name="ivy.settings.dir" location="../settings" />
	<property file="${ivy.settings.dir}/ivysettings.properties" />

	<property name="src.dir" location="src" />
	<property name="build.dir" location="build" />
	<property name="dist.dir" location="dist" />
	<property name="jar.filename" value="${projectname}.jar" />

	<target name="init">
		<!-- Create the time stamp -->
		<tstamp />
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${build.dir}" />
	</target>

	<available file="${ivy.jar.file}" property="skip.download" />

	<target name="download-ivy" unless="skip.download">
		<mkdir dir="${ivy.jar.dir}" />
		<!--
			download Ivy from web site so that it can be used even without any
			special installation
		-->
		<echo message="installing ivy..." />
		<get src="http://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar" dest="${ivy.jar.file}" usetimestamp="true" />
	</target>

	<target name="install-ivy" depends="download-ivy" description="--> install ivy">
		<!--
			try to load ivy here from local ivy dir, in case the user has not
			already dropped it into ant's lib dir (note that the latter copy will
			always take precedence). We will not fail as long as local lib dir
			exists (it may be empty) and ivy is in at least one of ant's lib dir
			or the local lib dir.
		-->
		<path id="ivy.lib.path">
			<fileset dir="${ivy.jar.dir}" includes="*.jar" />
		</path>
		<taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path" />
	</target>

	<target name="resolve" depends="install-ivy">
		<ivy:settings file="${ivy.settings.dir}/ivysettings.xml" />
		<ivy:resolve file="ivy.xml" conf="compile, runtime, test, provided" />
	</target>

	<target name="compile" depends="init, resolve" description="compile the source ">
		<echo message="Compile source code..." />
		<ivy:cachepath pathid="lib.compile.path.id" conf="compile, provided" />
		<!-- Compile the java code from ${src.dir} into ${build.dir} -->
		<javac srcdir="${src.dir}" destdir="${build.dir}" classpathref="lib.compile.path.id" />
	</target>

	<target name="jar" depends="compile" description="generate the distribution">
		<echo message="Creating jar file..." />
		<!-- Create the distribution directory -->
		<mkdir dir="${dist.dir}" />
		<jar jarfile="${dist.dir}/${jar.filename}" basedir="${build.dir}" />
	</target>

	<target name="dist" depends="jar" />

	<target name="clean" description="clean up">
		<!-- Delete the ${build.dir} and ${dist.dir} directory trees -->
		<delete dir="${build.dir}" />
		<delete dir="${dist.dir}" />
	</target>

	<target name="clean-ivy" description="clean up ivy">
		<delete dir="${ivy.jar.dir}" />
	</target>

	<target name="clean-ivy-cache" depends="install-ivy">
		<ivy:settings file="${ivy.settings.file}" />
		<ivy:cleancache />
	</target>

	<target name="clean-all" depends="clean, clean-ivy-cache" description="clean up all" />
</project>